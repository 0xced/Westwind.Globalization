<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Westwind.Globalization.Web</name>
    </assembly>
    <members>
        <member name="T:Westwind.Globalization.DbResourceProvider">
            <summary>
            The DbResourceProvider class is an ASP.NET Resource Provider implementation
            that retrieves its resources from a database. It works in conjunction with a
            DbResourceManager object and so uses standard .NET Resource mechanisms to 
            retrieve its data. The provider should be fairly efficient and other than
            initial load time standard .NET resource caching is used to hold resource sets
            in memory.
            
            The Resource Provider class provides the base interface for accessing resources.
            This provider interface handles loading resources, caching them (using standard
            Resource Manager functionality) and allowing access to resources via GetObject.
            
            This provider supports global and local resources, explicit expressions
            as well as implicit expressions (IImplicitResourceProvider).
            
            There's also a design time implementation to provide Generate LocalResources
            support from ASP.NET Web Form designer.
            </summary>
        </member>
        <member name="F:Westwind.Globalization.DbResourceProvider._className">
            <summary>
            
            </summary>
        </member>
        <member name="F:Westwind.Globalization.DbResourceProvider.ProviderLoaded">
            <summary>
            Flag that can be read to see if the resource provider is loaded
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProvider.#ctor(System.String,System.String)">
            <summary>
            Default constructor - only captures the parameter values
            </summary>
            <param name="virtualPath"></param>
            <param name="classname"></param>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProvider.ClearResourceCache">
            <summary>
            Releases all resources and forces resources to be reloaded
            from storage on the next GetResourceSet
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProvider.System#Web#Compilation#IResourceProvider#GetObject(System.String,System.Globalization.CultureInfo)">
            <summary>
            The main method to retrieve a specific resource key. The provider
            internally handles resource fallback based on the ResourceSet implementation.
            </summary>
            <param name="resourceKey"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProvider.System#Web#Compilation#IImplicitResourceProvider#GetObject(System.Web.Compilation.ImplicitResourceKey,System.Globalization.CultureInfo)">
            <summary>
            Implicit ResourceKey GetMethod that is called off meta:Resource key values.
            Note that if a value is missing at compile time this method is never called
            at runtime as the key isn't added to the Implicit key dictionary
            </summary>
            <param name="implicitKey"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProvider.ConstructFullKey(System.Web.Compilation.ImplicitResourceKey)">
            <summary>
            Routine that generates a full resource key string from
            an Implicit Resource Key value
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProvider.System#Web#Compilation#IImplicitResourceProvider#GetImplicitResourceKeys(System.String)">
            <summary>
            Retrieves all keys for from the resource store that match the given key prefix.
            The value here is generally a property name (or resourceId) and this routine
            retrieves all matching property values.
            
            So, lnkSubmit as the prefix finds lnkSubmit.Text, lnkSubmit.ToolTip and
            returns both of those keys.
            </summary>
            <param name="keyPrefix"></param>
            <returns></returns>
        </member>
        <member name="P:Westwind.Globalization.DbResourceProvider.ResourceManager">
            <summary>
            IResourceProvider interface - required to provide an instance to an
            ResourceManager object.
            
            Note that the resource manager is not tied to a specific culture by
            default. The Provider uses the UiCulture without explicitly passing
            culture info.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.DbResourceProvider.ResourceReader">
            <summary>
            Required instance of the ResourceReader for this provider. Part of
            the IResourceProvider interface. The reader is responsible for feeding
            the Resource data from a ResourceSet. The interface basically walks
            an enumerable interface by ResourceId.
            </summary>
        </member>
        <member name="T:Westwind.Globalization.DbResourceProviderFactory">
            <summary>
            Provider Factory class that needs to be set in web.config in order for ASP.NET to instantiate
            this class for all resource related tasks.
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProviderFactory.CreateGlobalResourceProvider(System.String)">
            <summary>
            Core Factory method that returns an instance of our DbResourceProvider 
            database Resource provider for Global Resources. This method gets
            passed simple a ResourceSet which is equivalent to a Resource file in
            Resx and here maps to the ResourceSet id in the database.
            </summary>
            <param name="classname"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProviderFactory.CreateLocalResourceProvider(System.String)">
            <summary>
            Creates a local resource provider for a given Page or Template Resource.
            
            We'll create local resources by application relative names. This routine
            gets passed a full virtual path to the page or template control and we'll
            strip off the virtual and use only the virtual relative path. 
            
            So: /myapp/test.aspx becomes test.aspx and
                /myapp/subdir/test.aspx becomes subdir/test.aspx
            
            for our ResourceSet naming of local resources. The provider is 
            created with this ResourceSet name.
            </summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="T:Westwind.Globalization.DbSimpleResourceProvider">
            <summary>
            Implementation of a very simple database Resource Provider. This implementation
            is self contained and doesn't use a custom ResourceManager. Instead it
            talks directly to the data resoure business layer (DbResourceDataManager).
            
            Dependencies:
            DbResourceDataManager
            DbResourceConfiguration
            
            You can replace those depencies (marked below in code) with your own data access
            management. The two dependcies manage all data access as well as configuration 
            management via web.config configuration section. It's easy to remove these
            and instead use custom data access code of your choice.
            </summary>
        </member>
        <member name="F:Westwind.Globalization.DbSimpleResourceProvider._ResourceSetName">
            <summary>
            Keep track of the 'className' passed by ASP.NET
            which is the ResourceSetId in the database.
            </summary>
        </member>
        <member name="F:Westwind.Globalization.DbSimpleResourceProvider._resourceCache">
            <summary>
            Cache for each culture of this ResourceSet. Once
            loaded we just cache the resources.
            </summary>
        </member>
        <member name="F:Westwind.Globalization.DbSimpleResourceProvider._SyncLock">
            <summary>
            Critical section for loading Resource Cache safely
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProvider.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="virtualPath">The virtual path to the Web application</param>
            <param name="resourceSet">Name of the resource set to load</param>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProvider.GetResourceCache(System.String)">
            <summary>
            Manages caching of the Resource Sets. Once loaded the values are loaded from the 
            cache only.
            </summary>
            <param name="cultureName"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProvider.ClearResourceCache">
            <summary>
            Clears out the resource cache which forces all resources to be reloaded from
            the database.
            
            This is never actually called as far as I can tell
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProvider.System#Web#Compilation#IResourceProvider#GetObject(System.String,System.Globalization.CultureInfo)">
            <summary>
            The main worker method that retrieves a resource key for a given culture
            from a ResourceSet.
            </summary>
            <param name="resourceKey"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProvider.GetObjectInternal(System.String,System.String)">
            <summary>
            Internal lookup method that handles retrieving a resource
            by its resource id and culture. Realistically this method
            is always called with the culture being null or empty
            but the routine handles resource fallback in case the
            code is manually called.
            </summary>
            <param name="resourceKey"></param>
            <param name="cultureName"></param>
            <returns></returns>
        </member>
        <member name="P:Westwind.Globalization.DbSimpleResourceProvider.ResourceReader">
            <summary>
            The Resource Reader is used parse over the resource collection
            that the ResourceSet contains. It's basically an IEnumarable interface
            implementation and it's what's used to retrieve the actual keys
            </summary>
        </member>
        <member name="T:Westwind.Globalization.DbSimpleResourceProviderFactory">
            <summary>
            Provider factory that instantiates the individual provider. The provider
            passes a 'classname' which is the ResourceSet id or how a resource is identified.
            For global resources it's the name of hte resource file, for local resources
            it's the full Web relative virtual path
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProviderFactory.CreateGlobalResourceProvider(System.String)">
            <summary>
            ASP.NET sets up provides the global resource name which is the 
            resource ResX file (without any extensions). This will become
            our ResourceSet id. ie. Resource.resx becomes "Resources"
            </summary>
            <param name="classname"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProviderFactory.CreateLocalResourceProvider(System.String)">
            <summary>
            ASP.NET passes the full page virtual path (/MyApp/subdir/test.aspx) wich is
            the effective ResourceSet id. We'll store only an application relative path
            (subdir/test.aspx) by stripping off the base path.
            </summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="T:Westwind.Globalization.DbSimpleResourceReader">
            <summary>
            Required simple IResourceReader implementation. A ResourceReader
            is little more than an Enumeration interface that allows 
            parsing through the Resources in a Resource Set which
            is passed in the constructor.
            </summary>
        </member>
        <member name="T:Westwind.Globalization.DbDesignTimeResourceProviderFactory">
            <remarks>
            Design-time resource provider to provide Generate Local Resources functionality.
            </remarks>
        </member>
        <member name="T:Westwind.Globalization.DbDesignTimeResourceProviderFactory.DesignTimeGlobalResourceProvider">
            <remarks>
            Design-time resource provider for global resources.
            </remarks>
        </member>
        <member name="T:Westwind.Globalization.DbDesignTimeResourceProviderFactory.DbDesignTimeLocalResourceProvider">
            <remarks>
            Design-time resource provider and writer for local resources.
            </remarks>
        </member>
        <member name="M:Westwind.Globalization.DbDesignTimeResourceProviderFactory.DbDesignTimeLocalResourceProvider.GetFullPagePath">
            <summary>
            RAS Modified to read values from configiuration section
            </summary>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbDesignTimeResourceProviderFactory.ResourceDictionary.Westwind#Globalization#DbDesignTimeResourceProviderFactory#IResourceDictionary#CreateResourceKey(System.Object)">
            <summary>
            Creates a new ResourceKey value. By default uses the
            name of the control plus an incrementor.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbDesignTimeResourceProviderFactory.ResourceDictionary.CreateKey(System.String)">
            <summary>
            Creates a string name key for a given meta:Resource attribute.
            The key is the name of hte property with a 1,2,3 postfix if there's duplication
            
            NOTE: This is slightly different than the default behavior which will always
            use a post fix value. This version only creates a postfix if there's dupes.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbDesignTimeResourceProviderFactory.ResourceDictionary.IsUsedKey(System.String)">
            <summary>
            Checks to see if a resource key already exists
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Westwind.Globalization.GlobalizationResources">
            <summary>
            Class is used as to consolidate access to resources
            </summary>
        </member>
        <member name="T:Westwind.Globalization.Web.Resources.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.Can_t_save_resource__Invalid_culture_id_passed">
            <summary>
              Looks up a localized string similar to Can&apos;t save resource: Invalid culture id passed: {0}.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.Client_Id_and_Client_Secret_must_be_provided">
            <summary>
              Looks up a localized string similar to Client Id and Client Secret must be provided..
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.Client_Id_and_Client_Secret_must_be_provided_">
            <summary>
              Looks up a localized string similar to Client Id and Client Secret must be provided..
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.ConnectionFailed">
            <summary>
              Looks up a localized string similar to Connection failed: .
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.ConnectionStringForResourcesIsNotConfigure">
            <summary>
              Looks up a localized string similar to Connection string for resources is not configured.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.EditPageResources">
            <summary>
              Looks up a localized string similar to Edit Page Resources.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.InvalidSearchResult">
            <summary>
              Looks up a localized string similar to Invalid search result..
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.LocalizationOptions">
            <summary>
              Looks up a localized string similar to Localization Options.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.LocalizationTable_Localization_Table_exists_already">
            <summary>
              Looks up a localized string similar to Localization Table exists already.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.No_matching_Recordset_found">
            <summary>
              Looks up a localized string similar to No matching Recordset found..
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.NoResourceIdSpecifiedCantAddResource">
            <summary>
              Looks up a localized string similar to No ResourceId specified. Can&apos;t add resource.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.ShowLocalizationIcons">
            <summary>
              Looks up a localized string similar to Show Localization Icons.
            </summary>
        </member>
        <member name="T:Westwind.Globalization.DbResourceControl">
            <summary>
            The DbResourceControl class provides Page level Resource Administration
            support to localizable ASP.NET pages. This control allows bringing up
            the localization Administration Form that shows all localizable resources
            for editing and translation.
            
            The control also provides the ability to show icons next to each control
            to jump directly to the appropriate control in the Admin form. The control
            can automatically detect Page, Control, Master Page (any template control)
            resources and jump directly to the appropriate resource entry if it exists.
            
            Note the control shows all Localizable controls, but there's no guarantee
            that the controls are actually hooked up for localization in the ASP.NET
            page, control, master etc. resource. You need to ensure either implicit
            or explicit resources are actually configured on the pages.
            
            For the control to work it merely should be placed on any form that is
            localizable. Display of the control is globally controlled via the 
            DbResourceConfiguration object (and the DbResourceConfigurationSection in
            Web.config by default) which allows toggling display of the control in the UI
            and toggling the display of the individual resource icons.
            
            The Administration form relies on the availability of the Administration
            form (LocalizeForm.aspx) and a configuration entry that points at this
            control. This form must be distributed with your Web application.
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.#ctor">
            <summary>
            The default control constructor.
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.OnEditResources(System.Object,System.EventArgs)">
            <summary>
            Event handler that is called and can be hooked when the Edit Resources
            option is clicked. This interface brings up the Administration form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.OnShowIcons(System.Object,System.EventArgs)">
            <summary>
            Event handler that is called when the Show Icons checkbox is
            checked or unchecked. The default behavior sets the current
            DbResourceConfiguration.ShowControlIcons setting which 
            is global.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.AddResourceToResourceFile(System.Web.UI.Control,System.String,System.String)">
            <summary>
            Generates the Database resources for a given form
            </summary>
            <param name="ParentControl"></param>
            <param name="ResourcePrefix"></param>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.GetAllLocalizableControls(System.Web.UI.Control)">
            <summary>
            Goes through the form and returns a list of all control on a form
            that are marked as [Localizable]
            </summary>
            <param name="control">Base container to start the parsing from. Usually this will be the current form but could be a control.</param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.GetAllLocalizableControls(System.Web.UI.Control,System.Collections.Generic.List{Westwind.Globalization.LocalizableProperty})">
            <summary>
            Goes through the form and returns a list of all control on a form
            that are marked as [Localizable]
            
            This internal method does all the work and drills into child containers
            recursively.
            </summary>
            <param name="control"></param>
            <param name="ResourceList"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.GetAllLocalizableControls(System.Web.UI.Control,System.Collections.Generic.List{Westwind.Globalization.LocalizableProperty},System.Boolean)">
            <summary>
            Goes through the form and returns a list of all control on a form
            that are marked as [Localizable]
            
            This internal method does all the work and drills into child containers
            recursively.
            </summary>
            <param name="control">The control at which to start parsing usually Page</param>
            <param name="ResourceList">An instance of the resource list. Pass null to create</param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.GetNonLocalizableControlProperties(System.Web.UI.Control,System.Collections.Generic.List{Westwind.Globalization.LocalizableProperty})">
            <summary>
            This method is used to override special controls that don't
            have LocalizableProperties but in fact should have them by
            explicitly marking certain properties as overridable.
            </summary>
            <param name="control">The control </param>
            <param name="ResourceList"></param>        
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.AddLocalizationIcons(System.Web.UI.Control,System.Boolean)">
            <summary>
            This method is responsible for showing localization icons next to every control
            that has localizable properties.
            
            The icons are resource based and also display the control's ID. Note icons are
            placed only next to any controls that are marked as [Localizable]. Some contained
            controls like GridVIew/DataGrid Columns are not marked as [Localizable] yet
            the ASP.NET designer creates implicit resources for them anyway - these controls
            will not show icons.
            </summary>
            <param name="control"></param>
            <param name="TopLevel"></param>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.AddIconScriptFunctions">
            <summary>
            Internal method to add the page level script routines
            that are used to inject the icons next to controls. These routines
            inject HTML into the DOM rather than adding controls in order
            to avoid problems with Controls.Add() and ASP.NET script expressions.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.DbResourceControl.ShowIconsInitially">
            <summary>
             Determines the initial state of the ShowLocalization Icons Text box.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.DbResourceControl.ClientOnLocalizationIconHandler">
            <summary>
            Optional override for Client OnLocalization Handler that when set is fired
            in response to a click on one of the localization icons. Gets passed
            an event object plus the resource name and resource set name.
            
            If set OnLocalization is called first which in turn fires the handler
            of your choice.
            </summary>
        </member>
        <member name="T:Westwind.Globalization.LocalizableProperty">
            <summary>
            simple object that holds the value structure of each
            saved resource item on a form
            </summary>
        </member>
        <member name="T:Westwind.Globalization.DbResourceControlDesigner">
            <summary>
            Control designer used so we get a grey button display instead of the 
            default label display for the control.
            </summary>
        </member>
        <member name="T:Westwind.Globalization.JavaScriptResourceHandler">
            <summary>
            Http Handler that returns ASP.NET Local and Global Resources as JavaScript
            objects. Supports both plain Resx Resources as well as DbResourceProvider 
            driven resources.
            
            Objects are generated in the form of:
            
            &lt;&lt;code lang="JavaScript"&gt;&gt;var localRes  = {
               BackupFailed: "Backup was not completed",
               Loading: "Loading"
            );&lt;&lt;/code&gt;&gt;
            
            where the resource key becomes the property name with a string value.
            
            The handler is driven through query string variables determines which 
            resources are returned:
            
            ResourceSet      -  Examples: "resources" (global), "admin/somepage.aspx" "default.aspx" (local)
            LocaleId         -  Examples: "de-de","de",""  (empty=invariant)
            ResourceType     -  Resx,ResDb
            IncludeControls  -  if non-blank includes control values (. in name)
            VarName          -  name of hte variable generated - if omitted localRes or globalRes is created.    
            ResourceMode -  Flag required to find Resx resources on disk 0 - Local 1 - global 2 - plain resx
            
            Resources retrieved are aggregated for the locale Id (ie. de-de returns 
            de-de,de and invariant) whichever matches first.
            </summary>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.SerializeResourceDictionary(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            Generates the actual JavaScript object map string makes up the
            handler's result content.
            </summary>
            <param name="resxDict"></param>
            <param name="varname"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.SendErrorResponse(System.String)">
            <summary>
            Returns an error response to the client. Generates a 404 error
            </summary>
            <param name="Message">Error message to display</param>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.SendTextOutput(System.String,System.String)">
            <summary>
            Writes text output to server using UTF-8 encoding and GZip encoding
            if supported by the client
            </summary>
            <param name="text"></param>
            <param name="useGZip"></param>
            <param name="contentType"></param>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.RegisterJavaScriptGlobalResources(System.Web.UI.Control,System.String,System.String,System.String,Westwind.Globalization.ResourceProviderTypes)">
            <summary>
            Inserts global resources into the current page.
            </summary>
            <param name="control">A control (typically) page needed to embed into the page</param>
            <param name="resourceSet">Name of the resourceSet to load</param>
            <param name="localeId">The Locale for which to load resources. Normalized from most specific to Invariant</param>
            <param name="varName">Name of the variable generated</param>
            <param name="resourceType">Resx or DbResourceProvider (database)</param>
            <param name="includeControls">Determines whether control ids are included</param>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.RegisterJavaScriptGlobalResources(System.Web.UI.Control,System.String,System.String)">
            <summary>
            Embed global JavaScript resources into the page.
            
            This version returns resources of the active Resx or DB Resource Provider
            and includes no controls and creates a variable named "globalRes"
            and uses the page's current UI culture
            </summary>
            <param name="control"></param>
            <param name="resourceSet"></param>       
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.RegisterJavaScriptLocalResources(System.Web.UI.Control,System.String,System.String,System.String,Westwind.Globalization.ResourceProviderTypes,System.Boolean)">
            <summary>
            Inserts local resources into the current page.
            </summary>
            <param name="control">A control (typically) page needed to embed into the page</param>
            <param name="resourceSet">Name of the resourceSet to load</param>
            <param name="localeId">The Locale for which to load resources. Normalized from most specific to Invariant</param>
            <param name="varName">Name of the variable generated</param>
            <param name="resourceType">Resx or DbResourceProvider (database)</param>
            <param name="includeControls">Determines whether control ids are included</param>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.RegisterJavaScriptLocalResources(System.Web.UI.Control,System.String)">
            <summary>
            Embed global JavaScript resources into the page.
            
            This version returns resources of the active Resx or DB Resource Provider,
            includes no controls and uses the CurrentUICulture's locale id
            </summary>
            <param name="control">A control or page instance required to </param>
            <param name="varName">Name of the JavaScript object variable created</param>        
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.GetJavaScriptGlobalResourcesUrl(System.String,System.String,System.String,Westwind.Globalization.ResourceProviderTypes)">
            <summary>
            Returns a URL to the JavaScriptResourceHandler.axd handler that retrieves
            normalized resources for a given resource set and localeId and creates
            a JavaScript object with the name specified.
            
            This function returns only the URL - you're responsible for embedding
            the URL into the page as a script tag to actually load the resources.
            </summary>
            <param name="varName"></param>
            <param name="resourceSet"></param>
            <param name="localeId"></param>
            <param name="resourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.GetJavaScriptGlobalResourcesUrl(System.String,System.String)">
            <summary>
            Returns a URL to the JavaScriptResourceHandler.axd handler that retrieves
            normalized resources for a given resource set and localeId and creates
            a JavaScript object with the name specified.
            
            This version assumes the current UI Culture and auto-detects the
            provider type (Resx or DbRes) currently active.
            </summary>
            <param name="varName"></param>
            <param name="resourceSet"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.GetJavaScriptLocalResourcesUrl(System.String,System.String,System.String,Westwind.Globalization.ResourceProviderTypes,System.Boolean)">
            <summary>
            Inserts local resources into the current page.
            </summary>
            <param name="control">A control (typically) page needed to embed into the page</param>
            <param name="resourceSet">Name of the resourceSet to load</param>
            <param name="localeId">The Locale for which to load resources. Normalized from most specific to Invariant</param>
            <param name="varName">Name of the variable generated</param>
            <param name="resourceType">Resx or DbResourceProvider (database)</param>
            <param name="includeControls">Determines whether control ids are included</param>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.GetJavaScriptLocalResourcesUrl(System.String,System.Boolean)">
            <summary>
            Returns a URL to embed local resources into the page via JavaScriptResourceHandler.axd. 
            This method returns only a URL - you're responsible for embedding the script tag into the page
            to actually load the resources.
            
            This version assumes the local resource set for the current request/page and autodetected
            resources (resdb or resx). It also uses the CurrentUICulture as the locale.
            </summary>
            <param name="varName">The name of the JavaScript variable to create</param>        
            <param name="includeControls"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.GetJavaScriptResourcesUrl(System.String,System.String,System.String,Westwind.Globalization.ResourceProviderTypes)">
            <summary>
            Returns a standard Resx resource based on it's . delimited resourceset name
            </summary>
            <param name="varName">The name of the JavaScript variable to create</param>
            <param name="resourceSet">The name of the resource set
            
            Example:
            CodePasteMvc.Resources.Resources  (~/Resources/Resources.resx in CodePasteMvc project)
            </param>
            <param name="localeId">IETF locale id (2 or 4 en or en-US or empty)</param>
            <param name="resourceType">ResDb or ResX</param>
            <returns></returns>
        </member>
        <member name="T:Westwind.Globalization.ResourceProviderTypes">
            <summary>
            Determines the resource provider type used
            to retrieve resources.
            
            Note only applies to the stock ResX provider
            or the DbResourceProviders of this assembly.
            Other custom resource providers are not supported.
            </summary>
        </member>
        <member name="T:Westwind.Globalization.StronglyTypedWebResources">
            <summary>
            Class that handles generating strongly typed resources 
            for global Web resource files. This feature is not supported
            in ASP.NET stock projects and doesn't support custom resource
            providers in WAP.
            </summary>
        </member>
        <member name="F:Westwind.Globalization.StronglyTypedWebResources.IsVb">
            <summary>
            Internally track File type once we've read it from the
            top level method.
            </summary>
        </member>
        <member name="M:Westwind.Globalization.StronglyTypedWebResources.CreateClassFromFromAllGlobalResXResources(System.String,System.String)">
            <summary>
            Creates a class containing strongly typed resources of all resource keys
            in all global resource ResX files. A single class file with multiple classes
            is created.
            
            The extension of the output file determines whether VB or CS is generated       
            </summary>        
            <param name="Namespace"></param>
            <param name="FileName">Output file name for the generated class. .cs and .vb generate appropriate languages</param>
            <returns>Generated class as a string</returns>
        </member>
        <member name="M:Westwind.Globalization.StronglyTypedWebResources.CreateGlobalResxResourceDesignerFiles(System.String,Westwind.Globalization.CodeGenerationLanguage)">
            <summary>
            Creates a strongly typed resource class that uses the ASP.NET Resource Manager
            rather than using Resx .NET resources which basically results in duplicated 
            resource sets loaded. Overwrites the generated.
            </summary>
            <param name="Namespace"></param>        
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.StronglyTypedWebResources.CreateClassFromAllDatabaseResources(System.String,System.String)">
            <summary>
            Creates strongly typed classes from all global resources in the current application
            from the active DbResourceManager. One class is created which contains each of the
            resource classes. Classnames are not necessarily named with
            
            Uses the default DbResourceConfiguration.Current settings for connecting
            to the database.
            </summary>
            <param name="Namespace">Optional namespace for the generated file</param>
            <param name="FileName">Output class file. .cs or .vb determines code language</param>
            <returns>Generated class as a string</returns>
        </member>
        <member name="M:Westwind.Globalization.StronglyTypedWebResources.CreateClassFromResXResource(System.String,System.String,System.String,System.String)">
            <summary>
            Creates an ASP.NET compatible strongly typed resource from a ResX file in ASP.NET.
            The class generated works only for Global Resources by calling GetGlobalResourceObject.
            
            This routine parses the raw ResX files since you can't easily get access to the active
            ResourceManager in an ASP.NET application since the assembly is dynamically named and not
            easily accessible.
            </summary>
            <param name="ResourceSetFileName"></param>
            <param name="Namespace"></param>
            <param name="FileName">Output filename for the CSharp class. If null no file is generated and only the class is returned</param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.StronglyTypedWebResources.CreateClassFromDatabaseResource(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a strongly typed resource class for a ResoureSet from the DbResourceManager.
            
            Note: Uses the default ResourceProvider settings as set in the DbResourceConfiguration.Current 
            property for opening the database and otherwise setting values.
            </summary>
            <param name="ResourceSetName">The name of the resource set. Should be a GLOBAL resource</param>
            <param name="Namespace">The namespace for the generated class. Null or string.Empty to not generate a namespace</param>
            <param name="Classname">Name of the class to be generated</param>
            <param name="FileName">Output filename for the CSharp class. If null no file is generated and only the class is returned</param>
            <returns>string of the generated class</returns>
        </member>
        <member name="M:Westwind.Globalization.StronglyTypedWebResources.CreateClassFromResourceSet(System.Resources.ResourceSet,System.String,System.String,System.String)">
            <summary>
            Creates a strongly typed resource from a ResourceSet object. The ResourceSet passed should always
            be the invariant resourceset that contains all the ResourceIds.
            
            Creates strongly typed keys for each of the keys/values.
            </summary>
            <param name="resourceSet"></param>
            <param name="Namespace">Namespace of the generated class. Pass Null or string.Empty to not generate a namespace</param>
            <param name="classname">Name of the class to generate. Pass null to use the ResourceSet name</param>
            <param name="fileName">Output filename for the CSharp class. If null no file is generated and only the class is returned</param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.StronglyTypedWebResources.CreateClassHeader(System.String,System.Boolean,System.Text.StringBuilder)">
            <summary>
            Creates the class header for a page
            </summary>
            <param name="Classname"></param>
            <param name="IsVb"></param>
            <param name="sbClass"></param>
        </member>
        <member name="M:Westwind.Globalization.StronglyTypedWebResources.CreateNameSpaceWrapper(System.String,System.Boolean,System.String)">
            <summary>
            Wraps the body of a class (or multiple classes) into a namespace
            and adds teh appropriate using/imports statements. If no namespace is
            passed the using/imports are still added, but no namespace is assigned
            </summary>
            <param name="Namespace"></param>
            <param name="IsVb"></param>
            <param name="Class"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.StronglyTypedWebResources.IsFileVb(System.String)">
            <summary>
            Checks to see if the file extension is .vb and if so 
            returns true
            </summary>
            <param name="FileName"></param>
            <returns></returns>
        </member>
        <member name="P:Westwind.Globalization.StronglyTypedWebResources.WebPhysicalPath">
            <summary>
            The physical path for the Web application
            </summary>
        </member>
        <member name="P:Westwind.Globalization.StronglyTypedWebResources.ErrorMessage">
            <summary>
            An error message set on a failure result
            </summary>
        </member>
    </members>
</doc>
